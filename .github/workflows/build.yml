name: "Build Extension"

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build extension
        run: npm run build
        env:
          NODE_NO_WARNINGS: 1
          
      - name: Package extension
        run: npm run package
        env:
          NODE_NO_WARNINGS: 1
          
      - name: Debug build output
        run: |
          echo "Build directory contents:"
          ls -la build/ || echo "Build directory not found"
          echo "Looking for zip files:"
          find . -name "*.zip" -type f || echo "No zip files found"
          
      - name: Get version and commit info
        id: info
        run: |
          VERSION=$(node -p "require('./package.json').version")
          COMMIT_SHORT=$(echo "${{ github.sha }}" | cut -c1-8)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "commit=$COMMIT_SHORT" >> $GITHUB_OUTPUT
          
      - name: Rename build artifact
        run: |
          # First try the expected location
          if [ -f "build/chrome-mv3-prod.zip" ]; then
            echo "Found zip file at build/chrome-mv3-prod.zip"
            mv build/chrome-mv3-prod.zip build/cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip
          else
            echo "Looking for zip files in alternative locations..."
            # Look for any zip file in build directory
            ZIP_FILE=$(find build -name "*.zip" -type f | head -1)
            if [ -n "$ZIP_FILE" ]; then
              echo "Found zip file at: $ZIP_FILE"
              mv "$ZIP_FILE" build/cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip
            else
              echo "No zip file found! Creating one manually..."
              cd build/chrome-mv3-prod && zip -r ../cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip .
            fi
          fi
          
      - name: Verify build
        run: |
          echo "Build verification:"
          ls -la build/
          echo "Extension contents:"
          unzip -l build/cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip | head -20
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogix-browser-plugin-chrome-build-${{ steps.info.outputs.commit }}
          path: build/cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip
          retention-days: 30
          
      - name: Build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ steps.info.outputs.commit }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: âœ… Build successful" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact**: cogix-browser-plugin-chrome-${{ steps.info.outputs.version }}-${{ steps.info.outputs.commit }}.zip" >> $GITHUB_STEP_SUMMARY
