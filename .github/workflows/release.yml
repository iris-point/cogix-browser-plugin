name: "Build and Release Plugin"

on:
  push:
    tags:
      - "v*.*.*"  # Triggers on version tags like v1.0.0, v1.2.3, etc.
  release:
    types: [created]
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      releases: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build extension
        run: npm run build
        env:
          NODE_NO_WARNINGS: 1
          
      - name: Package extension
        run: npm run package
        env:
          NODE_NO_WARNINGS: 1
          
      - name: Get version from package.json
        id: package-version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extension version: $VERSION"
          
      - name: Rename zip file with version
        run: |
          mv build/chrome-mv3-prod.zip build/cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip
          
      - name: Verify build output
        run: |
          echo "Build directory contents:"
          ls -la build/
          echo "Extension files:"
          unzip -l build/cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip
          
      - name: Create Release (if triggered by tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip
          name: "Cogix Browser Plugin Chrome v${{ steps.package-version.outputs.version }}"
          body: |
            ## Cogix Browser Plugin Chrome v${{ steps.package-version.outputs.version }}
            
            ### Installation Instructions
            
            1. Download the `cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip` file below
            2. Extract the ZIP file to a local folder
            3. Open Chrome and go to `chrome://extensions/`
            4. Enable "Developer mode" in the top right
            5. Click "Load unpacked" and select the extracted folder
            6. The Cogix Browser Plugin will be installed and ready to use
            
            ### What's New
            
            - Eye tracking functionality with real-time calibration
            - Screen recording capabilities
            - Event capture and data collection
            - Seamless integration with Cogix platform
            - Dedicated SDK download and management interface
            
            ### System Requirements
            
            - Chrome browser (latest version recommended)
            - Windows 10 or later (for eye tracking SDK)
            - Compatible eye tracking hardware
            
            ### Support
            
            For support and documentation, visit [cogix.app](https://cogix.app)
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}
          path: build/cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip
          retention-days: 90
          
      - name: Generate build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.package-version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Status**: âœ… Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact**: cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip" >> $GITHUB_STEP_SUMMARY
          echo "- **Size**: $(du -h build/cogix-browser-plugin-chrome-v${{ steps.package-version.outputs.version }}.zip | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "- **Release**: Created GitHub release" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Release**: Artifact only (no GitHub release)" >> $GITHUB_STEP_SUMMARY
          fi
